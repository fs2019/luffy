---- drf, luffyapi/
settings/,自定义配置目录；配置manage.py: os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'luffyapi.settings.dev')

日志：用 python 本身日志功能，https://docs.djangoproject.com/zh-hans/4.1/topics/logging/,复制事例到settings/dev.py,

自定义异常，utils/exceptions.py,配置使用settings/dev.py: REST_FRAMEWORK

mysql数据库，mysql -uroot -poldboy ; show databases; create database luffy charset=utf8mb4;
create user luffy_user identified by 'luffy'; grant all privileges on luffy.* to 'luffy_user'@'%' ;
flush privileges; mysql -uluffy_user -pluffy ;
配置settings/dev.py: DATABASES
pip install pymysql (官方推荐 mysqlclient) ; 配置 luffyapi/__init__.py:
    import pymysql
    pymysql.install_as_MySQLdb()

轮播图需要： pip install pillow -i https://pypi.douban.com/simple   # Successfully installed pillow-9.4.0

上传文件配置：settings/dev.py, STATICFILES_DIRS=[os.path.join(BASE_DIR,'static')]
    MEDIA_ROOT=os.path.join(BASE_DIR,'uploads') ; MEDIA_URL = '/media/'
luffyapi/urls.py, serve...
创建目录 static/: s05_luffy\luffyapi\luffyapi\static\

创建app: cd luffyapi/apps/,   home/,
(st10_django4) PS C:\Users\...\luffyapi\apps> python ..\..\manage.py startapp home
由于apps/目录为手工创建，django不能识别，所以要添加 python 路径，settings/dev.py
    import sys; sys.path.insert(0,os.path.join(BASE_DIR,'apps')); import home ; INSTALLED_APPS=['home',]
构建模型，luffyapi/apps/home/models.py,

创建drf序列化器，luffyapi/apps/home/serializers.py,   luffyapi/apps/home/view.py 导入
设置常量文件，settings/constants.py,   luffyapi/apps/home/view.py 导入
创建drf视图,luffyapi/apps/home/view.py, 导入序列化器/常量文件，
配置路由，luffyapi/apps/home/urls.py,

后台管理xadmin测试失败不兼容： python .\manage.py createsuperuser : admin:root@123
    apps/home/admin.py 注册; apps/home/apps.py 更改菜单标签，如果不生效则更改 apps/home/__init__.py ,

模型抽象类：luffyapi/utils/models.py,



---- vue, luffy_pc/, cd s05_luffy ; 全局安装,注意下目录: vue,webpack,webpack-cli,vue-cli,
(st10_django4) PS C:\Users\...\s05_luffy> vue init webpack lufei_pc
    ... ... added 1305 packages in 35s  # Project initialization finished!  To get started:
    cd lufei_pc ； npm run dev

删除原有显示：
src/router/index.js, 注释 HelloWorld 相关路由与注册，更改路由模式 默认hash, mode:'history',
src/App.vue,  <template>中注释：<!-- <img src="./assets/logo.png"> --> ； <style>中：注释样式 /* #app */；
src/main.js,

创建home组件，src/components/Home.vue,引入common/下3个组件/轮播/导航/底部；src/router/index.js, 路由注册与分配，
创建全局配置文件如ip信息：src/settings.js, ； src/main.js 注册使用，

npm i element-ui -S  # 简写 npm install element-ui --save
(st10_django4) PS C:\Users\...\s05_luffy\lufei_pc> npm i element-ui -S   # added 6 packages in 4s
element-ui 导入 src/main.js,
创建css文件 static/css/reset.css, main.js导入: import '../static/css/reset.css'

axios 加载数据，首页轮播：src/components/common/Banner.vue,
axios 加载数据，顶部导航：src/components/common/Header.vue,
axios 加载数据，底部导航：src/components/common/Footer.vue,

---- 跨域问题：前端/后端 均安装配置；
django: pip install django-cors-headers -i https://pypi.douban.com/simple
    Successfully installed django-cors-headers-3.13.0
settings/dev.py, INSTALLED_APPS=['corsheaders',],MIDDLEWARE=['corsheaders.middleware.CorsMiddleware',]
    CORS_ORIGIN_WHITELIST=('http://www.luffycity.cn:8080','http://127.0.0.1:8080','http://localhost:8080');
    CORS_ALLOW_CREDENTIALS=False ;
vue: axios, lufei_pc/src/main.js: import axios from 'axios'
(st10_django4) PS C:\Users\...\s05_luffy\lufei_pc> npm i axios -S
    added 6 packages in 5s

---- 主机 域名 配置
域名配置,添加2条：sudo vim /etc/hosts
    127.0.0.1 api.luffycity.cn
    127.0.0.1 www.luffycity.cn
luffyapi/settings/dev.py, ALLOWED_HOSTS=['api.luffycity.cn','www.luffycity.cn'] ；开发模式只能大于1024
luffy_pc/config/index.js, 配置域名与端口（开发模式只能大于1024）


---- 代码同步, git/svn/ftp,
-- svn
伪流程：user01: svn commit; svn update; user02: svn checkout; svn commit; user03: svn checkout; svn commit;
-- git，伪流程：user01: git push; git commit; user02: git pull; git push;
没有仓库：
mkdir gitdemo; cd getdemo; git init 初始化仓库，生成隐藏目录.git/,配置目录; git clone; git status;
git commit -m 'first commit'; 会提示账号，--global会保存在 git 全局配置 .gitconfig 文件中，不加则仅保存在当前 项目中；
git config --global user.email 'you#example.com'; git config --global user.name 'your name' ;
touch 1.html; git add . (.即当前目录下所有子目录 或指定目录 git add drfdemo); git commit -m 'second commit' ;
git reflog 查看本地版本号； git reset --hard 回退的本地版本号 ; git log 查看详细日志；
git branch 查看分支； git branch dev 创建dev分支；git checkout dev 切换分支;
git checkout master; git branch -D dev 删除分支不能删除已进入的分支要切换到其它分支才能删除；
git branch -m master main 更改 master 分支名称为 main ; git remote -v 查看远程仓库;
git merge 分支名 ， 合并分支；

git remote add origin https://github.com/fs2019/luffy.git
git push -u origin main ；main为远程分支名称;
git push -u origin dev:dev ；dev为远程分支名称;
